// Ïä¨ÎùºÏù¥Îî© ÏúàÎèÑÏö∞ ÎùºÎäî ÏïåÍ≥†Î¶¨Ï¶ò
// Ïñ∏Ï†ú Ìà¨Ìè¨Ïù∏Ìä∏ÏïåÍ≥†Î¶¨Ï¶òÏùÑ Ïì∞ÎäîÏßÄ?
// Two Pointers Îäî 1Ï∞®Ïõê Î∞∞Ïó¥ÏóêÏÑú Îëê Í∞úÏùò Ìè¨Ïù∏ÌÑ∞Î•º Ï°∞ÏûëÌïòÏó¨ ÏõêÌïòÎäî Í≤∞Í≥ºÎ•º ÏñªÎäî ÏïåÍ≥†Î¶¨Ï¶ò
// 2Í∞úÏùò Ìè¨Ïù∏ÌÑ∞Î•º ÏÇ¨Ïö©ÌïòÏó¨ Í∏∞Ï°¥Ïùò Î∞©ÏãùÎ≥¥Îã§ ÏãúÍ∞ÑÏùÑ Í∞úÏÑ†
// Ï¶â, Ïñ¥Îñ§ ÌäπÏ†ï Ï°∞Í±¥ÏùÑ ÎßåÏ°±ÌïòÎäî üî•Ïó∞ÏÜç Íµ¨Í∞Ñüî•ÏùÑ Íµ¨Ìï† Îïå O(N) ÏúºÎ°ú ÌíÄ Ïàò ÏûàÎèÑÎ°ù ÎèÑÏôÄÏ£ºÎäî ÏïåÍ≥†Î¶¨Ï¶ò
// Ìà¨Ìè¨Ïù∏Ìä∏ÏïåÍ≥†Î¶¨Ï¶ò: Íµ¨Í∞ÑÏù¥ Í∞ÄÎ≥ÄÏ†Å / Ïä¨ÎùºÏù¥Îî© ÏúàÎèÑÏö∞:Íµ¨Í∞ÑÏù¥ Í≥†Ï†ïÏ†Å

// ÎÇ¥ÌíÄÏù¥
const solution = (m, arr) => {
  let lt = 0,
    sum = 0,
    max = Number.MIN_SAFE_INTEGER;
  for (let rt = 0; rt < arr.length; rt++) {
    sum += arr[rt];
    if (rt - lt === m - 1) {
      if (sum > max) {
        max = sum;
      }
      sum -= arr[lt++];
    }
  }
  return max;
};

//Í∞ïÏùòÌíÄÏù¥
// const solution = (k, arr) => {
//   let sum = arr[0] + arr[1] + arr[2],
//     max = Number.MIN_SAFE_INTEGER;
//   for (let i = k; i < arr.length; i++) {
//     sum += arr[i] - arr[i - k];
//     if (sum > max) max = sum; // ÎòêÎäî max = Math.max(max,sum)
//   }
//   return max;
// };

let a = [12, 15, 11, 20, 25, 10, 20, 19, 13, 15];
console.log(solution(3, a));
